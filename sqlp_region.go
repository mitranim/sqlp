package sqlp

// Represents a region in source text. Part of `Token`. The regions generated by
// this package are either all-zero, or have non-negative indexes corresponding
// to valid positions in source text.
type Region [2]int

// Difference between end and start.
func (self Region) Len() int { return self[1] - self[0] }

// Same as having no length.
func (self Region) IsEmpty() bool { return !self.HasLen() }

// Same as having a positive length.
func (self Region) HasLen() bool { return self.Len() > 0 }

// Returns a substring corresponding to the given region. Permissive: if the
// string is too short on either side, this will adjust the positions instead
// of panicking.
func (self Region) Slice(val string) string {
	begin, end := self[0], self[1]

	if end < len(val) {
		val = val[:end]
	}

	if begin >= 0 {
		if begin < len(val) {
			val = val[begin:]
		} else {
			val = ``
		}
	}

	return val
}
